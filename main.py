import logging
from flask import Flask
from telegram.ext import Updater, CommandHandler
import schedule
import time
import threading
import pytz
from datetime import datetime

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "YOUR_TELEGRAM_BOT_TOKEN"
CHAT_ID = "YOUR_CHAT_ID"

# === –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ì–ò–†–û–í–ê–ù–ò–Ø ===
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# === FLASK –°–ï–†–í–ï–† –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –ñ–ò–ó–ù–ò ===
app = Flask(__name__)

@app.route("/")
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç üê•"

# === –°–û–û–ë–©–ï–ù–ò–ï, –û–¢–ü–†–ê–í–õ–Ø–ï–ú–û–ï –ü–û –£–¢–†–ê–ú ===
def send_morning_message(context=None):
    message = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! ‚òÄÔ∏è –°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—è–¥–æ–º. ‚ú®"
    if context:
        context.bot.send_message(chat_id=CHAT_ID, text=message)
    else:
        updater.bot.send_message(chat_id=CHAT_ID, text=message)

# === –†–ê–°–ü–ò–°–ê–ù–ò–ï –î–õ–Ø –ï–ñ–ï–î–ù–ï–í–ù–û–ô –û–¢–ü–†–ê–í–ö–ò ===
def schedule_checker():
    tz = pytz.timezone("Asia/Almaty")  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω—É–∂–Ω—ã–π —Ç–µ–±–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
    while True:
        now = datetime.now(tz)
        if now.hour == 8 and now.minute == 30:
            send_morning_message()
            time.sleep(60)  # –ñ–¥—ë–º –º–∏–Ω—É—Ç—É, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥—É–±–ª–∏
        time.sleep(20)

# === –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –ë–û–¢–ê ===
updater = Updater(token=TOKEN, use_context=True)
dispatcher = updater.dispatcher

def start(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="–ü—Ä–∏–≤–µ—Ç! –Ø –≥–æ—Ç–æ–≤ –∫ —É—Ç—Ä–µ–Ω–Ω–∏–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º ‚òÄÔ∏è")

start_handler = CommandHandler('start', start)
dispatcher.add_handler(start_handler)

# === –ó–ê–ü–£–°–ö ===
if __name__ == '__main__':
    threading.Thread(target=schedule_checker, daemon=True).start()
    threading.Thread(target=lambda: app.run(host='0.0.0.0', port=8080), daemon=True).start()
    updater.start_polling()
    updater.idle()